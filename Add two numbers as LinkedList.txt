/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int i=0;
        ListNode *p=l1;
        while(p->next)
        {
            i++;
            p=p->next;
        }
        int j=0;
        ListNode *q=l2;
        while(q->next)
        {
            j++;
            q=q->next;
        }
        if(i>j)
        {
            for(int k=0;k<i-j;k++)
            {
                ListNode *t=new ListNode(0,NULL);
                q->next=t;
                q=t;
            }
            j=i;
        }
        else if(i<j)
        {
            for(int k=0;k<j-i;k++)
            {
                ListNode *t=new ListNode(0,NULL);
                p->next=t;
                p=t;
            }
            i=j;
        }
        ListNode *r=l1;
        l1->val=l1->val+l2->val;
        for(int k=0;k<i;k++)
        {
            if(l1->val>9)
            {
                l1->val-=10;
                l1->next->val+=1;
            }
            l1=l1->next;
            l2=l2->next;
            l1->val=l1->val+l2->val;
        }
        if(l1->val>9)
        {
            l1->val-=10;
            ListNode *t=new ListNode(1,NULL);
            l1->next=t;
        }
        return r;
    }
};