#include<bits/stdc++.h>
using namespace std;
class Node
{
  public:
  int data;
  Node *next;
};
Node *first;
void create(int a[],int n)
{
  Node *t,*last;
  first=new Node();
  first->data=a[0];
  first->next=NULL;
  last = first;
  for(int i=1;i<n;i++)
  {
    t=new Node();
    t->data=a[i];
    t->next=NULL;
    last->next=t;
    last = t;
  }
}
void display(Node *p)
{
  while(p!=NULL)
  {
    cout<<p->data<<" ";
    p=p->next;
  }
}
void Rdisplay(Node *p)
{
  if(p!=NULL)
  {
    cout<<p->data<<" ";
    Rdisplay(p->next);
  }
}
void revdisplay(Node *p)
{
  if(p!=NULL)
  {
    revdisplay(p->next);
    cout<<p->data<<" ";
  }
}
int count(Node *p)
{
  int a=0;
  while(p)
  { 
    a=a+1;
    p=p->next;
  }
  return a;
}
int Rcount(Node *p)
{
  if(p!=NULL)
  { 
    return Rcount(p->next)+1;
  }
  else return 0;
}
int add(Node *p)
{
  int a=0;
  while(p)
  { 
    a=a+p->data;
    p=p->next;
  }
  return a;
}
int Radd(Node *p)
{
  if(p!=NULL)
  { 
    return Radd(p->next)+p->data;
  }
  else return 0;
}
int main()
{
  int A[5]={1,2,3,4,5};
  create(A,5);
  display(first);
  cout<<endl;
  Rdisplay(first);
  cout<<endl;
  revdisplay(first);
  cout<<endl;
  cout<<count(first);
  cout<<endl;
  cout<<Rcount(first);
  cout<<endl;
  cout<<add(first);
  cout<<endl;
  cout<<Radd(first);
}